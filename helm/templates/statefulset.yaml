apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "microcosm.fullname" . }}
  labels:
    app: {{ include "microcosm.name" . }}
    chart: {{ include "microcosm.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "microcosm.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "microcosm.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.microcosm.image.repository }}:{{ .Values.microcosm.image.tag }}"
          imagePullPolicy: {{ .Values.microcosm.image.pullPolicy }}
          env:
            - name: NUM_ACCOUNTS
              value: "{{ .Values.microcosm.numAccounts }}"
          args:
          {{- range .Values.microcosm.gethArgs }}
            - {{ . }}
          {{- end }}
          volumeMounts:
           - mountPath: "/root"
             name: microcosm
          ports:
            - containerPort: 8545
              protocol: TCP
              name: jsonrpc
            - containerPort: 30303
              protocol: TCP
              name: peers
            - containerPort: 30301
              protocol: UDP
              name: discovery
          livenessProbe:
            httpGet:
              path: /
              port: jsonrpc
          readinessProbe:
            httpGet:
              path: /
              port: jsonrpc
  volumeClaimTemplates:
    - metadata:
        name: microcosm
        labels:
          app: {{ include "microcosm.name" . }}
          chart: {{ include "microcosm.chart" . }}
          release: {{ .Release.Name }}
          heritage: {{ .Release.Service }}
      spec:
        accessModes:
        - ReadWriteOnce
        - ReadOnlyMany
        resources:
          requests:
            storage: {{ .Values.microcosm.storageCapacity }}
        storageClassName: {{ .Values.microcosm.storageClassName }}
